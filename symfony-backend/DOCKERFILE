# ---------- build: instala dependencias Composer ----------
ARG PHP_VERSION=8.3
FROM composer:2 AS build
WORKDIR /app

COPY composer.json composer.lock symfony.lock ./
RUN composer install \
    --no-dev --no-scripts --prefer-dist --no-interaction --no-progress

COPY . .
RUN composer install \
    --no-dev --prefer-dist --no-interaction --no-progress \
 && composer dump-autoload --optimize
FROM php:${PHP_VERSION}-fpm-alpine AS runtime-fpm
WORKDIR /app

RUN apk add --no-cache \
      bash tini tzdata icu-libs libzip libpng libjpeg-turbo \
      $PHPIZE_DEPS icu-dev libzip-dev libpng-dev libjpeg-turbo-dev \
  && pecl install apcu \
  && docker-php-ext-enable apcu \
  && docker-php-ext-configure gd --with-jpeg --with-freetype \
  && docker-php-ext-install -j$(nproc) \
      pdo_mysql opcache intl zip gd bcmath pcntl \
  && apk del --no-network icu-dev libzip-dev libpng-dev libjpeg-turbo-dev $PHPIZE_DEPS

COPY --from=build /app /app

RUN addgroup -S app && adduser -S -G app app \
 && mkdir -p var \
 && chown -R app:app var
USER app

ENV APP_ENV=prod \
    APP_DEBUG=0 \
    PHP_OPCACHE_VALIDATE_TIMESTAMPS=0 \
    PHP_OPCACHE_MAX_ACCELERATED_FILES=20000

# Puerto php-fpm
EXPOSE 9000


ENTRYPOINT ["/sbin/tini","--"]
CMD ["php-fpm","-F"]

FROM php:${PHP_VERSION}-cli-alpine AS runtime-cli
WORKDIR /app

RUN apk add --no-cache \
      bash tini tzdata icu-libs libzip libpng libjpeg-turbo \
      $PHPIZE_DEPS icu-dev libzip-dev libpng-dev libjpeg-turbo-dev \
  && pecl install apcu \
  && docker-php-ext-enable apcu \
  && docker-php-ext-configure gd --with-jpeg --with-freetype \
  && docker-php-ext-install -j$(nproc) \
      pdo_mysql opcache intl zip gd bcmath pcntl \
  && apk del --no-network icu-dev libzip-dev libpng-dev libjpeg-turbo-dev $PHPIZE_DEPS

COPY --from=build /app /app

RUN addgroup -S app && adduser -S -G app app \
 && mkdir -p var \
 && chown -R app:app var
USER app

ENV APP_ENV=prod APP_DEBUG=0

ENTRYPOINT ["/sbin/tini","--"]
CMD ["php","bin/console","list"]
